# Generated by Django 2.0.2 on 2018-04-08 16:49
from django.db import migrations
#from .models import *
from ..static.python import APIKey
from riotwatcher import RiotWatcher
from django.db import migrations
def genChampions(apps, schema_editor):
	Key = APIKey.api_key()
	watcher = RiotWatcher(Key)
	region = 'na1'
	db_alias = schema_editor.connection.alias
	static_champ_list = watcher.static_data.champions(region, tags = 'all')
	champion_keys = static_champ_list['keys']
	data = static_champ_list['data']
	Champion = apps.get_model('league','Champion')
	champ_objects = []
	for key,name in champion_keys.items():
		champ = data[name]
		img = 'http://ddragon.leagueoflegends.com/cdn/6.24.1/img/champion/' + champ['image']['full']
		passive = champ['passive']
		passiveImg = 'http://ddragon.leagueoflegends.com/cdn/6.24.1/img/passive/' + passive['image']['full']
		Champion.objects.create(champion_id=int(key),name=champ['name'],image=img,title=champ['title'],
			passiveName=passive['name'],passiveDescription=passive['sanitizedDescription'],passiveImage=passiveImg).save()

class Migration(migrations.Migration):

	dependencies = [
		('league', '0001_initial'),
        ('league', '0002_allchampinfo'),
    ]

	operations = [
		migrations.RunPython(genChampions),
	]